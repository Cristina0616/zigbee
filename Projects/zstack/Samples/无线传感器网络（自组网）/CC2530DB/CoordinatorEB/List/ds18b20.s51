///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        05/May/2014  19:39:50 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı¾İ´«Êä£© /
//                          \Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍø£© /
//                          \Source\ds18b20.c                                 /
//    Command line       =  -f H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı¾İ´«Ê /
//                          ä£©\Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍ /
//                          ø£©\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg /
//                           (-DCPU32MHZ -DROOT=__near_func                   /
//                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                  /
//                          -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f      /
//                          H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı¾İ´«Êä£© /
//                          \Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍø£© /
//                          \CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg   /
//                          (-DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR     /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFF0                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷Í /
//                          øÂç£¨×Ô×éÍøÓëÊı¾İ´«Êä£©\Projects\zstack\Samples\Î /
//                          ŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍø£©\Source\ds18b20.c -D       /
//                          ZIGBEEPRO -D ZTOOL_P1 -D MT_TASK -D MT_SYS_FUNC   /
//                          -D xMT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -D         /
//                          NV_RESTORE -lC H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô× /
//                          éÍøÓëÊı¾İ´«Êä£©\Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ /
//                          ÷ÍøÂç£¨×Ô×éÍø£©\CC2530DB\CoordinatorEB\List\ -lA  /
//                          H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı¾İ´«Êä£© /
//                          \Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍø£© /
//                          \CC2530DB\CoordinatorEB\List\ --diag_suppress     /
//                          Pe001,Pa010 -o H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô× /
//                          éÍøÓëÊı¾İ´«Êä£©\Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ /
//                          ÷ÍøÂç£¨×Ô×éÍø£©\CC2530DB\CoordinatorEB\Obj\ -e    /
//                          --debug --core=plain --dptr=16,1                  /
//                          --data_model=large --code_model=banked            /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data_rom --nr_virtual_regs 16   /
//                          -I H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı¾İ´«Ê /
//                          ä£©\Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍ /
//                          ø£©\CC2530DB\ -I H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨× /
//                          Ô×éÍøÓëÊı¾İ´«Êä£©\Projects\zstack\Samples\ÎŞÏß´«¸ /
//                          ĞÆ÷ÍøÂç£¨×Ô×éÍø£©\CC2530DB\..\SOURCE\ -I          /
//                          H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı¾İ´«Êä£© /
//                          \Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍø£© /
//                          \CC2530DB\..\..\..\ZMAIN\TI2530DB\ -I             /
//                          H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı¾İ´«Êä£© /
//                          \Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍø£© /
//                          \CC2530DB\..\..\..\..\..\COMPONENTS\MT\ -I        /
//                          H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı¾İ´«Êä£© /
//                          \Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍø£© /
//                          \CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INCLUDE\  /
//                          -I H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı¾İ´«Ê /
//                          ä£©\Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍ /
//                          ø£©\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARGET /
//                          \CC2530EB\ -I H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×é /
//                          ÍøÓëÊı¾İ´«Êä£©\Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ /
//                          ÍøÂç£¨×Ô×éÍø£©\CC2530DB\..\..\..\..\..\COMPONENTS /
//                          \OSAL\MCU\CCSOC\ -I H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç /
//                          £¨×Ô×éÍøÓëÊı¾İ´«Êä£©\Projects\zstack\Samples\ÎŞÏß /
//                          ´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍø£©\CC2530DB\..\..\..\..\..\COMP /
//                          ONENTS\OSAL\INCLUDE\ -I                           /
//                          H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı¾İ´«Êä£© /
//                          \Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍø£© /
//                          \CC2530DB\..\..\..\..\..\COMPONENTS\STACK\AF\ -I  /
//                          H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı¾İ´«Êä£© /
//                          \Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍø£© /
//                          \CC2530DB\..\..\..\..\..\COMPONENTS\STACK\NWK\    /
//                          -I H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı¾İ´«Ê /
//                          ä£©\Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍ /
//                          ø£©\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SEC\ /
//                           -I H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı¾İ´« /
//                          Êä£©\Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×é /
//                          Íø£©\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SAP /
//                          I\ -I H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı¾İ /
//                          ´«Êä£©\Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô /
//                          ×éÍø£©\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\S /
//                          YS\ -I H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı¾ /
//                          İ´«Êä£©\Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨× /
//                          Ô×éÍø£©\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ /
//                          ZDO\ -I H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı /
//                          ¾İ´«Êä£©\Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨ /
//                          ×Ô×éÍø£©\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\ /
//                          F8W\ -I H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı /
//                          ¾İ´«Êä£©\Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨ /
//                          ×Ô×éÍø£©\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\ /
//                           -I H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı¾İ´« /
//                          Êä£©\Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×é /
//                          Íø£©\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES\ /
//                          SADDR\ -I H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓë /
//                          Êı¾İ´«Êä£©\Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç /
//                          £¨×Ô×éÍø£©\CC2530DB\..\..\..\..\..\COMPONENTS\SER /
//                          VICES\SDATA\ -I H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô /
//                          ×éÍøÓëÊı¾İ´«Êä£©\Projects\zstack\Samples\ÎŞÏß´«¸Ğ /
//                          Æ÷ÍøÂç£¨×Ô×éÍø£©\CC2530DB\..\..\..\..\..\COMPONEN /
//                          TS\MAC\INCLUDE\ -I H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£ /
//                          ¨×Ô×éÍøÓëÊı¾İ´«Êä£©\Projects\zstack\Samples\ÎŞÏß´ /
//                          «¸ĞÆ÷ÍøÂç£¨×Ô×éÍø£©\CC2530DB\..\..\..\..\..\COMPO /
//                          NENTS\MAC\HIGH_LEVEL\ -I                          /
//                          H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı¾İ´«Êä£© /
//                          \Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍø£© /
//                          \CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_LEVEL /
//                          \srf04\ -I H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓ /
//                          ëÊı¾İ´«Êä£©\Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂ /
//                          ç£¨×Ô×éÍø£©\CC2530DB\..\..\..\..\..\COMPONENTS\MA /
//                          C\LOW_LEVEL\srf04\SINGLE_CHIP\ -Ohz               /
//                          --require_prototypes                              /
//    List file          =  H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı¾İ´«Êä£© /
//                          \Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍø£© /
//                          \CC2530DB\CoordinatorEB\List\ds18b20.s51          /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME ds18b20

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?S_SHL
        EXTERN ?V0
        EXTERN __INIT_XDATA_Z

        PUBLIC ??Delay_nus?relay
        FUNCTION ??Delay_nus?relay,0203H
        PUBLIC ??Match_DS18B20?relay
        FUNCTION ??Match_DS18B20?relay,0203H
        PUBLIC ??get_id?relay
        FUNCTION ??get_id?relay,0203H
        PUBLIC ??init_1820?relay
        FUNCTION ??init_1820?relay,0203H
        PUBLIC ??read_1820?relay
        FUNCTION ??read_1820?relay,0203H
        PUBLIC ??write_1820?relay
        FUNCTION ??write_1820?relay,0203H
        PUBLIC Delay_nus
        FUNCTION Delay_nus,080203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUBLIC Match_DS18B20
        FUNCTION Match_DS18B20,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        PUBWEAK P1DIR
        PUBWEAK _A_P1
        PUBLIC flag
        PUBLIC get_id
        FUNCTION get_id,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC id
        PUBLIC init_1820
        FUNCTION init_1820,021203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC read_1820
        FUNCTION read_1820,021203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC sensor_data_value
        PUBLIC write_1820
        FUNCTION write_1820,021203H
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
Delay_nus           SYMBOL "Delay_nus"
??Delay_nus?relay   SYMBOL "?relay", Delay_nus
Match_DS18B20       SYMBOL "Match_DS18B20"
??Match_DS18B20?relay SYMBOL "?relay", Match_DS18B20
get_id              SYMBOL "get_id"
??get_id?relay      SYMBOL "?relay", get_id
init_1820           SYMBOL "init_1820"
??init_1820?relay   SYMBOL "?relay", init_1820
read_1820           SYMBOL "read_1820"
??read_1820?relay   SYMBOL "?relay", read_1820
write_1820          SYMBOL "write_1820"
??write_1820?relay  SYMBOL "?relay", write_1820

// H:\zigbeesrc\8.ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍøÓëÊı¾İ´«Êä£©\Projects\zstack\Samples\ÎŞÏß´«¸ĞÆ÷ÍøÂç£¨×Ô×éÍø£©\Source\ds18b20.c
//    1 
//    2 #include "DS18B20.h"

        ASEGN SFR_AN:DATA:NOROOT,090H
// union <unnamed> volatile __sfr _A_P1
_A_P1:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0feH
// unsigned char volatile __sfr P1DIR
P1DIR:
        DATA8
        DS 1
//    3 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//    4 unsigned char id[8];
id:
        DS 8
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//    5 unsigned char sensor_data_value[2];
sensor_data_value:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//    6 unsigned char flag; 
flag:
        DS 1
        REQUIRE __INIT_XDATA_Z
//    7 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//    8 void Delay_nus(unsigned int s) 
Delay_nus:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function Delay_nus
        CODE
//    9 {
        ; Saved register size: 0
        ; Auto size: 0
        SJMP    ??Delay_nus_0
//   10   while (s--)
//   11   {
//   12     asm("NOP");
??Delay_nus_1:
        NOP
//   13     asm("NOP");
        NOP
//   14     asm("NOP");
        NOP
//   15   }
??Delay_nus_0:
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     A,R0
        ADD     A,#-0x1
        DEC     R2
        MOV     A,R1
        ADDC    A,#-0x1
        MOV     R3,A
        MOV     A,R0
        ORL     A,R1
        JNZ     ??Delay_nus_1
//   16 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock0
//   17 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   18 void init_1820(void) 
init_1820:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function init_1820
        CODE
//   19 {
        FUNCALL init_1820, Delay_nus
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL init_1820, Delay_nus
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL init_1820, Delay_nus
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   20   SET_OUT; 
        ORL     0xfe,#0x2
//   21   SET_DQ;//Êä³ö1
        SETB    0x90.1
//   22   CL_DQ; 
        CLR     0x90.1
//   23   Delay_nus(550);//À­µÍÒ»¶ÎÊ±¼ä 
        ; Setup parameters for call to function Delay_nus
        MOV     R2,#0x26
        MOV     R3,#0x2
        LCALL   ??Delay_nus?relay
//   24   SET_DQ;//ÊÍ·Å 
        SETB    0x90.1
//   25   SET_IN;//ÊäÈë 
        ANL     0xfe,#0xfd
//   26   Delay_nus(40); //ÊÍ·Å×ÜÏßºóµÈ´ı15-60us
        ; Setup parameters for call to function Delay_nus
        MOV     R2,#0x28
        MOV     R3,#0x0
        LCALL   ??Delay_nus?relay
//   27   while(IN_DQ)  {;}//µÈ´ı»Ø¸´ 
??init_1820_0:
        MOV     C,0x90.1
        JC      ??init_1820_0
//   28   Delay_nus(240);//»Ø¸´µÄµÍµçÆ½ÔÚ60µ½240us  
        ; Setup parameters for call to function Delay_nus
        MOV     R2,#-0x10
        MOV     R3,#0x0
        LCALL   ??Delay_nus?relay
//   29   SET_OUT; 
        ORL     0xfe,#0x2
//   30   SET_DQ;//»Øµ½³õÊ¼DQ=1£»
        SETB    0x90.1
//   31 }
        POP     DPH
        CFI DPH0 SameValue
        CFI CFA_SP SP+-4
        POP     DPL
        CFI DPL0 SameValue
        CFI CFA_SP SP+-3
        LJMP    ?BRET
        CFI EndBlock cfiBlock1
        REQUIRE P1DIR
        REQUIRE _A_P1
//   32 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   33 void write_1820(unsigned char x)  
write_1820:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function write_1820
        CODE
//   34 {  
        FUNCALL write_1820, Delay_nus
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R1
        MOV     R7,A
//   35   unsigned char m;    
//   36   SET_OUT;
        ORL     0xfe,#0x2
//   37   for(m=0;m<8;m++)  
        MOV     R6,#0x0
//   38   {  
//   39      CL_DQ;
??write_1820_0:
        CLR     0x90.1
//   40      if(x&(1<<m))    //Ğ´Êı¾İ£¬´ÓµÍÎ»¿ªÊ¼  
        MOV     ?V0 + 0,#0x1
        MOV     ?V0 + 1,#0x0
        MOV     A,R6
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        MOV     A,?V0 + 0
        ANL     A,R7
        JZ      ??write_1820_1
//   41      SET_DQ; 
        SETB    0x90.1
        SJMP    ??write_1820_2
//   42      else  
//   43      CL_DQ;  
??write_1820_1:
        CLR     0x90.1
//   44      Delay_nus(40);   //15~60us  
??write_1820_2:
        ; Setup parameters for call to function Delay_nus
        MOV     R2,#0x28
        MOV     R3,#0x0
        LCALL   ??Delay_nus?relay
//   45      SET_DQ;  
        SETB    0x90.1
//   46   }
        INC     R6
        MOV     A,R6
        CLR     C
        SUBB    A,#0x8
        JC      ??write_1820_0
//   47   SET_DQ;  
        SETB    0x90.1
        CFI EndBlock cfiBlock2
//   48 } 
        REQUIRE ?Subroutine0
        REQUIRE P1DIR
        REQUIRE _A_P1
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock3
//   49 
//   50 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   51 unsigned char read_1820(void)  
read_1820:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function read_1820
        CODE
//   52 {   
        FUNCALL read_1820, Delay_nus
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
//   53   unsigned char temp,k,n;    
//   54   temp=0;  
        MOV     ?V0 + 0,#0x0
//   55   for(n=0;n<8;n++)  
        MOV     R6,#0x0
//   56   {  
//   57     CL_DQ;     
??read_1820_0:
        CLR     0x90.1
//   58     SET_DQ; 
        SETB    0x90.1
//   59     SET_IN;  
        ANL     0xfe,#0xfd
        MOV     ?V0 + 2,#0x1
        MOV     ?V0 + 3,#0x0
        MOV     A,R6
        MOV     R0,#?V0 + 2
        LCALL   ?S_SHL
        MOV     A,?V0 + 2
        MOV     C,0x90.1
        JNC     ??read_1820_1
//   60     k=IN_DQ;    //¶ÁÊı¾İ,´ÓµÍÎ»¿ªÊ¼  
//   61     if(k)  
//   62     temp|=(1<<n);  
        ORL     ?V0 + 0,A
        SJMP    ??read_1820_2
//   63     else  
//   64     temp&=~(1<<n);  
??read_1820_1:
        CPL     A
        ANL     ?V0 + 0,A
//   65     Delay_nus(70); //60~120us      
??read_1820_2:
        ; Setup parameters for call to function Delay_nus
        MOV     R2,#0x46
        MOV     R3,#0x0
        LCALL   ??Delay_nus?relay
//   66     SET_OUT;
        ORL     0xfe,#0x2
//   67   
//   68   }  
        INC     R6
        MOV     A,R6
        CLR     C
        SUBB    A,#0x8
        JC      ??read_1820_0
//   69   return (temp);  
        MOV     R1,?V0 + 0
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock4
        REQUIRE _A_P1
        REQUIRE P1DIR
//   70 }  
//   71 //ËÑË÷ID

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   72 void get_id()
get_id:
        CFI Block cfiBlock5 Using cfiCommon0
        CFI Function get_id
        CODE
//   73 {     
        FUNCALL get_id, init_1820
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_id, write_1820
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_id, read_1820
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//   74   init_1820();        //resert
        ; Setup parameters for call to function init_1820
        LCALL   ??init_1820?relay
//   75   write_1820(0x33); 
        ; Setup parameters for call to function write_1820
        MOV     R1,#0x33
        LCALL   ??write_1820?relay
//   76   
//   77   for(unsigned char ii=0;ii<8;ii++)
        MOV     R6,#0x0
//   78   {
//   79     id[ii]=read_1820();
??get_id_0:
        ; Setup parameters for call to function read_1820
        LCALL   ??read_1820?relay
        MOV     ?V0 + 0,R6
        MOV     A,#id & 0xff
        ADD     A,?V0 + 0
        MOV     DPL,A
        MOV     A,#(id >> 8) & 0xff
        ADDC    A,#0x0
        MOV     DPH,A
        MOV     A,R1
        MOVX    @DPTR,A
//   80   }
        INC     R6
        MOV     A,R6
        CLR     C
        SUBB    A,#0x8
        JC      ??get_id_0
//   81 }
        SJMP    ?Subroutine0
        CFI EndBlock cfiBlock5
//   82 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   83 void Match_DS18B20(unsigned char *buffer)
Match_DS18B20:
        CFI Block cfiBlock6 Using cfiCommon0
        CFI Function Match_DS18B20
        CODE
//   84 {
        FUNCALL Match_DS18B20, write_1820
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Match_DS18B20, write_1820
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//   85  unsigned char i;
//   86  write_1820(0x55);
        ; Setup parameters for call to function write_1820
        MOV     R1,#0x55
        LCALL   ??write_1820?relay
//   87  for(i=0;i<8;i++){
        MOV     ?V0 + 2,#0x0
//   88    write_1820(buffer[i]);
??Match_DS18B20_0:
        ; Setup parameters for call to function write_1820
        MOV     ?V0 + 0,?V0 + 2
        MOV     A,R6
        ADD     A,?V0 + 0
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??write_1820?relay
//   89    }
        INC     ?V0 + 2
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,#0x8
        JC      ??Match_DS18B20_0
//   90  } 
        MOV     R7,#0x3
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock6

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Delay_nus?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Delay_nus

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??init_1820?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    init_1820

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??write_1820?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    write_1820

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??read_1820?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    read_1820

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??get_id?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    get_id

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Match_DS18B20?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Match_DS18B20

        END
//   91 
//   92 
//   93 
//   94 
//   95 
//   96 
// 
// 295 bytes in segment BANKED_CODE
//  36 bytes in segment BANK_RELAYS
//   2 bytes in segment SFR_AN
//  11 bytes in segment XDATA_Z
// 
// 331 bytes of CODE  memory
//   0 bytes of DATA  memory (+ 2 bytes shared)
//  11 bytes of XDATA memory
//
//Errors: none
//Warnings: none
